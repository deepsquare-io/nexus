{
  "name": "@deepsquare/app.deepsquare.io",
  "version": "1.1.0",
  "description": "Full-stack application of the DeepSquare Investment project base on Next.js.",
  "keywords": [
    "deepsquare",
    "next",
    "nexus"
  ],
  "homepage": "https://app.deepsquare.io",
  "bugs": "https://c-square.atlassian.net/jira/software/projects/TG/issues/",
  "license": "GNU GPL v3.0",
  "maintainers": [
    "Valentin Pollart <valentin@squarefactory.io> (https://github.com/valentinpollart)",
    "Charly Mancel <charly@deepsquare.io> (https://github.com/Lymnah)",
    "Marc Nguyen <marc@squarefactory.io> (https://github.com/Darkness4)",
    "Florin Dzeladini <florin@deepsquare.io> (https://github.com/efelem)"
  ],
  "repository": "github:deepsquare-io/app.deepsquare.io",
  "scripts": {
    "dev": "pnpm clean && next dev",
    "clean": "rimraf .next .vercel",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,css,scss,sass,json,json5,md,mdx,yml,yaml}\"",
    "lint": "next lint",
    "lint:ci": "eslint --ext .js,.ts,.tsx src/",
    "unimported": "unimported",
    "gen:graphql": "graphql-codegen --config sbatchServiceCodegen.yml && graphql-codegen --config statsCodegen.yml && graphql-codegen --config apiCodegen.yml && eslint 'src/graphql/**/**/generated/**/*.generated.ts' --fix",
    "test:compose": "docker compose up --detach --remove-orphans",
    "test:dev": "pnpm clean && NODE_ENV=test next dev",
    "test:build": "pnpm clean && NODE_ENV=production next build",
    "test:start": "NODE_ENV=production next start",
    "test:hardhat": "hardhat node",
    "test:open": "env-cmd --no-override -f .env.test cypress open",
    "test:run": "env-cmd --no-override -f .env.test cypress run",
    "analyze": "pnpm clean && NEXT_BUILD_ANALYZE=true env-cmd --no-override -f .env.test next build",
    "gen:eth": "scripts/generate-eth.sh",
    "vercel:install": "CYPRESS_INSTALL_BINARY=0 pnpm install --frozen-lockfile",
    "gen:grpc": "cd ../protos/loggerapis && buf generate"
  },
  "dependencies": {
    "@apollo/client": "^3.7.9",
    "@apollo/server": "^4.7.4",
    "@as-integrations/next": "^2.0.0",
    "@deepsquare/deepsquare-client": "^0.12.1",
    "@emotion/react": "^11.10.6",
    "@emotion/styled": "^11.10.6",
    "@ethersproject/bytes": "5.7.0",
    "@hookform/resolvers": "^2.9.11",
    "@mui/icons-material": "^5.11.9",
    "@mui/lab": "5.0.0-alpha.133",
    "@mui/material": "^5.11.10",
    "@mui/system": "^5.11.9",
    "@mui/x-data-grid": "^5.17.24",
    "@mui/x-date-pickers": "^5.0.19",
    "@protobuf-ts/grpcweb-transport": "^2.8.2",
    "@protobuf-ts/runtime": "^2.8.2",
    "@protobuf-ts/runtime-rpc": "^2.8.2",
    "@sentry/nextjs": "^7.45.0",
    "@swc/core": "^1.3.36",
    "@wagmi/connectors": "^2.0.0",
    "@wagmi/core": "^1.0.8",
    "ajv": "^8.12.0",
    "chart.js": "^4.3.0",
    "chartjs-adapter-date-fns": "^3.0.0",
    "class-validator": "^0.14.0",
    "classnames": "^2.3.2",
    "date-fns": "^2.29.3",
    "dayjs": "^1.11.7",
    "dedent": "^0.7.0",
    "encoding": "^0.1.13",
    "firebase": "^9.22.2",
    "firebase-admin": "^11.10.1",
    "graphql": "^16.6.0",
    "graphql-2-json-schema": "^0.10.0",
    "jose": "^4.14.6",
    "lodash": "^4.17.21",
    "mongodb": "^5.7.0",
    "mongoose": "^7.3.2",
    "next": "^13.4.3",
    "prop-types": "^15.8.1",
    "random-words": "^1.3.0",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "^18.2.0",
    "react-drag-drop-files": "2.3.10",
    "react-hook-form": "^7.43.1",
    "react-icons": "^4.7.1",
    "react-is": "^18.2.0",
    "react-toastify": "^9.1.1",
    "reactfire": "^4.2.2",
    "reflect-metadata": "^0.1.13",
    "tailwindcss": "^3.2.7",
    "tsyringe": "^4.8.0",
    "type-graphql": "2.0.0-beta.2",
    "uuid": "^9.0.0",
    "vanilla-jsoneditor": "^0.17.8",
    "viem": "^0.3.35",
    "wagmi": "^1.0.9",
    "xterm": "5.1.0",
    "xterm-addon-fit": "^0.7.0",
    "xterm-addon-image": "^0.4.0",
    "xterm-addon-web-links": "^0.8.0",
    "yup": "^1.0.2",
    "zod": "^3.20.6"
  },
  "devDependencies": {
    "@babel/core": "^7.21.0",
    "@babel/plugin-proposal-decorators": "^7.21.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/preset-env": "^7.20.2",
    "@graphql-codegen/cli": "^3.0.0",
    "@graphql-codegen/introspection": "^3.0.1",
    "@graphql-codegen/near-operation-file-preset": "^2.5.0",
    "@graphql-codegen/typescript": "^3.0.0",
    "@graphql-codegen/typescript-operations": "^3.0.0",
    "@graphql-codegen/typescript-react-apollo": "^3.3.7",
    "@jest/globals": "^29.4.3",
    "@next/bundle-analyzer": "^12.3.4",
    "@trivago/prettier-plugin-sort-imports": "^4.0.0",
    "@types/dedent": "^0.7.0",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/lodash": "^4.14.191",
    "@types/prop-types": "^15.7.5",
    "@types/react": "^18.2.13",
    "@types/uuid": "^9.0.2",
    "@typescript-eslint/eslint-plugin": "^5.60.0",
    "@typescript-eslint/parser": "^5.60.0",
    "@vue/compiler-sfc": "^3.2.47",
    "autoprefixer": "^10.4.13",
    "babel-loader": "^9.1.2",
    "babel-plugin-istanbul": "^6.1.1",
    "babel-plugin-react-remove-properties": "^0.3.0",
    "babel-plugin-transform-typescript-metadata": "^0.3.2",
    "depcheck": "^1.4.3",
    "env-cmd": "^10.1.0",
    "esbuild": "^0.17.10",
    "eslint": "^8.34.0",
    "eslint-config-next": "^12.3.4",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-deprecation": "^1.4.1",
    "eslint-plugin-prettier": "^4.2.1",
    "graphql-tag": "^2.12.6",
    "hardhat": "^2.12.7",
    "postcss": "^8.4.21",
    "prettier": "^2.8.4",
    "rimraf": "^4.1.2",
    "standard-commit": "^4.2.6",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.2",
    "typescript": "^5.1.3",
    "unimported": "^1.24.0",
    "wait-on": "^7.0.1",
    "webpack": "^5.84.1"
  },
  "jest": {
    "moduleNameMapper": {
      "^@abi(.*)$": "<rootDir>/abi$1",
      "^@components(.*)$": "<rootDir>/src/components$1",
      "^@graphql(.*)$": "<rootDir>/src/graphql$1",
      "^@grpc(.*)$": "<rootDir>/src/grpc$1",
      "^@hooks(.*)$": "<rootDir>/src/hooks$1",
      "^@lib(.*)$": "<rootDir>/src/lib$1",
      "^@public(.*)$": "<rootDir>/public$1",
      "^@state(.*)$": "<rootDir>/src/state$1",
      "^@styles(.*)$": "<rootDir>/src/styles$1",
      "^@utils(.*)$": "<rootDir>/src/utils$1",
      "^@types(.*)$": "<rootDir>/src/types$1",
      "^@data(.*)$": "<rootDir>/src/data$1"
    }
  }
}
