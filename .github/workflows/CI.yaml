name: Nexus CI
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches: [main, dev, hotfix/*]
    tags: ['**']
  pull_request:
    types: [opened, reopened, synchronize]
    branches-ignore: [main]
jobs:
  scripts:
    name: Quality assessment via scripts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script:
          - pnpm depcheck
          - pnpm unimported
          - pnpm lint:ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Run the script
        run: ${{ matrix.script }}

  # Disabled because not enough RAM.
  # test-build:
  #   name: Test build
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref != 'refs/heads/main' }}
  #   needs: [scripts]
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup environment
  #       uses: ./.github/actions/setup
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ${{ github.workspace }}/.next/cache
  #         # Generate a new cache whenever packages or source files change.
  #         key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
  #         # If source files changed but packages didn't, rebuild from a prior cache.
  #         restore-keys: |
  #           ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
  #     - name: Build
  #       run: pnpm run test:build
