/// <reference types="react" />
/// <reference types="next" />
import type { NodeOptions } from '@sentry/node';
export * from '@sentry/node';
export { captureUnderscoreErrorException } from '../common/_error';
/**
 * A passthrough error boundary for the server that doesn't depend on any react. Error boundaries don't catch SSR errors
 * so they should simply be a passthrough.
 */
export declare const ErrorBoundary: (props: {
    children?: import("react").ReactNode;
}) => import("react").ReactNode;
/**
 * A passthrough error boundary wrapper for the server that doesn't depend on any react. Error boundaries don't catch
 * SSR errors so they should simply be a passthrough.
 */
export declare function withErrorBoundary<P extends Record<string, any>>(WrappedComponent: React.ComponentType<P>): React.FC<P>;
/**
 * Just a passthrough since we're on the server and showing the report dialog on the server doesn't make any sense.
 */
export declare function showReportDialog(): void;
/**
 * @deprecated This constant will be removed in the next major update.
 */
export declare const IS_BUILD: boolean;
/** Inits the Sentry NextJS SDK on node. */
export declare function init(options: NodeOptions): void;
/**
 * @deprecated This constant will be removed in the next major update.
 */
declare const deprecatedIsBuild: () => boolean;
export { deprecatedIsBuild as isBuild };
export { withSentryGetStaticProps, wrapGetStaticPropsWithSentry, } from './wrapGetStaticPropsWithSentry';
export { withSentryServerSideGetInitialProps, wrapGetInitialPropsWithSentry, } from './wrapGetInitialPropsWithSentry';
export { withSentryServerSideAppGetInitialProps, wrapAppGetInitialPropsWithSentry, } from './wrapAppGetInitialPropsWithSentry';
export { withSentryServerSideDocumentGetInitialProps, wrapDocumentGetInitialPropsWithSentry, } from './wrapDocumentGetInitialPropsWithSentry';
export { withSentryServerSideErrorGetInitialProps, wrapErrorGetInitialPropsWithSentry, } from './wrapErrorGetInitialPropsWithSentry';
export { withSentryGetServerSideProps, wrapGetServerSidePropsWithSentry, } from './wrapGetServerSidePropsWithSentry';
export { withSentry, withSentryAPI, wrapApiHandlerWithSentry, } from './wrapApiHandlerWithSentry';
export { wrapServerComponentWithSentry } from './wrapServerComponentWithSentry';
//# sourceMappingURL=index.d.ts.map