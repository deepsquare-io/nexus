import { CompilerOptions } from 'typescript';
import { Config } from './config';
export interface TsConfig {
    compilerOptions: CompilerOptions;
}
export interface JsConfig {
    compilerOptions: CompilerOptions;
}
export interface PackageJson {
    name: string;
    version: string;
    main?: string;
    source?: string;
    dependencies?: {
        [name: string]: string;
    };
    optionalDependencies?: {
        [name: string]: string;
    };
    devDependencies?: {
        [name: string]: string;
    };
    bundleDependencies?: {
        [name: string]: string;
    };
    peerDependencies?: {
        [name: string]: string;
    };
    meteor?: {
        mainModule?: {
            client: string;
            server: string;
        };
    };
    repository?: {
        directory: string;
    };
}
export interface Context {
    cwd: string;
    dependencies: {
        [key: string]: string;
    };
    peerDependencies: {
        [key: string]: string;
    };
    cache?: boolean;
    config: Config;
    moduleDirectory: string[];
    cacheId?: string;
}
export declare function main(args: CliArguments): Promise<void>;
export interface CliArguments {
    flow: boolean;
    update: boolean;
    init: boolean;
    ignoreUntracked: boolean;
    clearCache: boolean;
    cache: boolean;
    cwd?: string;
    showConfig: boolean;
    showPreset?: string;
}
