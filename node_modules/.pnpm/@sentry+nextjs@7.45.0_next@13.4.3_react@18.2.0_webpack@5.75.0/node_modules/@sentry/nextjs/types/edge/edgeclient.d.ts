import type { Scope } from '@sentry/core';
import { BaseClient } from '@sentry/core';
import type { ClientOptions, Event, EventHint, Severity, SeverityLevel } from '@sentry/types';
import type { EdgeTransportOptions } from './transport';
export declare type EdgeClientOptions = ClientOptions<EdgeTransportOptions>;
/**
 * The Sentry Edge SDK Client.
 */
export declare class EdgeClient extends BaseClient<EdgeClientOptions> {
    /**
     * Creates a new Edge SDK instance.
     * @param options Configuration options for this SDK.
     */
    constructor(options: EdgeClientOptions);
    /**
     * @inheritDoc
     */
    eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event>;
    /**
     * @inheritDoc
     */
    eventFromMessage(message: string, level?: Severity | SeverityLevel, hint?: EventHint): PromiseLike<Event>;
    /**
     * @inheritDoc
     */
    protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null>;
}
//# sourceMappingURL=edgeclient.d.ts.map