import type { LoaderThis } from './types';
declare type LoaderOptions = {
    pagesDir: string;
    appDir: string;
    pageExtensionRegex: string;
    excludeServerRoutes: Array<RegExp | string>;
    wrappingTargetKind: 'page' | 'api-route' | 'middleware' | 'server-component';
};
/**
 * Replace the loaded file with a wrapped version the original file. In the wrapped version, the original file is loaded,
 * any data-fetching functions (`getInitialProps`, `getStaticProps`, and `getServerSideProps`) or API routes it contains
 * are wrapped, and then everything is re-exported.
 */
export default function wrappingLoader(this: LoaderThis<LoaderOptions>, userCode: string, userModuleSourceMap: any): void;
export {};
//# sourceMappingURL=wrappingLoader.d.ts.map