Object.defineProperty(exports, '__esModule', { value: true });

const withSentryConfig = require('./config/withSentryConfig.js');
const index = require('./server/index.js');
const _error = require('./common/_error.js');
const wrapGetStaticPropsWithSentry = require('./server/wrapGetStaticPropsWithSentry.js');
const wrapGetInitialPropsWithSentry = require('./server/wrapGetInitialPropsWithSentry.js');
const wrapAppGetInitialPropsWithSentry = require('./server/wrapAppGetInitialPropsWithSentry.js');
const wrapDocumentGetInitialPropsWithSentry = require('./server/wrapDocumentGetInitialPropsWithSentry.js');
const wrapErrorGetInitialPropsWithSentry = require('./server/wrapErrorGetInitialPropsWithSentry.js');
const wrapGetServerSidePropsWithSentry = require('./server/wrapGetServerSidePropsWithSentry.js');
const wrapApiHandlerWithSentry = require('./server/wrapApiHandlerWithSentry.js');
const wrapServerComponentWithSentry = require('./server/wrapServerComponentWithSentry.js');
const node = require('@sentry/node');

// This file is the main entrypoint on the server and/or when the package is `require`d

/**
 * This const serves no purpose besides being an identifier for this file that the SDK multiplexer loader can use to
 * determine that this is in fact a file that wants to be multiplexed.
 */
const _SENTRY_SDK_MULTIPLEXER = true;

exports.withSentryConfig = withSentryConfig.withSentryConfig;
exports.ErrorBoundary = index.ErrorBoundary;
exports.IS_BUILD = index.IS_BUILD;
exports.init = index.init;
exports.isBuild = index.isBuild;
exports.showReportDialog = index.showReportDialog;
exports.withErrorBoundary = index.withErrorBoundary;
exports.captureUnderscoreErrorException = _error.captureUnderscoreErrorException;
exports.withSentryGetStaticProps = wrapGetStaticPropsWithSentry.withSentryGetStaticProps;
exports.wrapGetStaticPropsWithSentry = wrapGetStaticPropsWithSentry.wrapGetStaticPropsWithSentry;
exports.withSentryServerSideGetInitialProps = wrapGetInitialPropsWithSentry.withSentryServerSideGetInitialProps;
exports.wrapGetInitialPropsWithSentry = wrapGetInitialPropsWithSentry.wrapGetInitialPropsWithSentry;
exports.withSentryServerSideAppGetInitialProps = wrapAppGetInitialPropsWithSentry.withSentryServerSideAppGetInitialProps;
exports.wrapAppGetInitialPropsWithSentry = wrapAppGetInitialPropsWithSentry.wrapAppGetInitialPropsWithSentry;
exports.withSentryServerSideDocumentGetInitialProps = wrapDocumentGetInitialPropsWithSentry.withSentryServerSideDocumentGetInitialProps;
exports.wrapDocumentGetInitialPropsWithSentry = wrapDocumentGetInitialPropsWithSentry.wrapDocumentGetInitialPropsWithSentry;
exports.withSentryServerSideErrorGetInitialProps = wrapErrorGetInitialPropsWithSentry.withSentryServerSideErrorGetInitialProps;
exports.wrapErrorGetInitialPropsWithSentry = wrapErrorGetInitialPropsWithSentry.wrapErrorGetInitialPropsWithSentry;
exports.withSentryGetServerSideProps = wrapGetServerSidePropsWithSentry.withSentryGetServerSideProps;
exports.wrapGetServerSidePropsWithSentry = wrapGetServerSidePropsWithSentry.wrapGetServerSidePropsWithSentry;
exports.withSentry = wrapApiHandlerWithSentry.withSentry;
exports.withSentryAPI = wrapApiHandlerWithSentry.withSentryAPI;
exports.wrapApiHandlerWithSentry = wrapApiHandlerWithSentry.wrapApiHandlerWithSentry;
exports.wrapServerComponentWithSentry = wrapServerComponentWithSentry.wrapServerComponentWithSentry;
exports._SENTRY_SDK_MULTIPLEXER = _SENTRY_SDK_MULTIPLEXER;
for (const k in node) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) exports[k] = node[k];
}
//# sourceMappingURL=index.server.js.map
