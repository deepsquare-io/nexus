{"version":3,"file":"_error.js","sources":["../../../src/common/_error.ts"],"sourcesContent":["import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionMechanism } from '@sentry/utils';\nimport type { NextPageContext } from 'next';\n\ntype ContextOrProps = {\n  req?: NextPageContext['req'];\n  res?: NextPageContext['res'];\n  err?: NextPageContext['err'] | string;\n  pathname?: string;\n  statusCode?: number;\n};\n\n/** Platform-agnostic version of `flush` */\nfunction flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient();\n  return client ? client.flush(timeout) : Promise.resolve(false);\n}\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nexport async function captureUnderscoreErrorException(contextOrProps: ContextOrProps): Promise<void> {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  const statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      addExceptionMechanism(event, {\n        type: 'instrument',\n        handled: true,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      });\n      return event;\n    });\n\n    if (req) {\n      scope.setSDKProcessingMetadata({ request: req });\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    captureException(err || `_error.js called with falsy error (${err})`);\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await flush(2000);\n}\n"],"names":["getCurrentHub","withScope","addExceptionMechanism","captureException"],"mappings":";;;;;AAYA;AACA,SAAA,KAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,MAAA,GAAAA,kBAAA,EAAA,CAAA,SAAA,EAAA,CAAA;AACA,EAAA,OAAA,MAAA,GAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAA,+BAAA,CAAA,cAAA,EAAA;AACA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,cAAA,CAAA;AACA;AACA;AACA,EAAA,MAAA,UAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,UAAA,KAAA,cAAA,CAAA,UAAA,CAAA;AACA,EAAA,IAAA,UAAA,IAAA,UAAA,GAAA,GAAA,EAAA;AACA,IAAA,OAAA,OAAA,CAAA,OAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAA,CAAA,cAAA,CAAA,QAAA,EAAA;AACA,IAAA,OAAA,OAAA,CAAA,OAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA,EAAAC,cAAA,CAAA,KAAA,IAAA;AACA,IAAA,KAAA,CAAA,iBAAA,CAAA,KAAA,IAAA;AACA,MAAAC,2BAAA,CAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,YAAA;AACA,QAAA,OAAA,EAAA,IAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,QAAA,EAAA,wBAAA;AACA,SAAA;AACA,OAAA,CAAA,CAAA;AACA,MAAA,OAAA,KAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA;AACA,IAAA,IAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,wBAAA,CAAA,EAAA,OAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA;AACA;AACA,IAAAC,qBAAA,CAAA,GAAA,IAAA,CAAA,mCAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA;AACA;AACA,EAAA,MAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA;;;;"}